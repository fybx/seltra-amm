"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./providers/ContractProvider.tsx":
/*!****************************************!*\
  !*** ./providers/ContractProvider.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContractProvider: function() { return /* binding */ ContractProvider; },\n/* harmony export */   useContract: function() { return /* binding */ useContract; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var algosdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! algosdk */ \"(app-pages-browser)/./node_modules/algosdk/dist/esm/index.js\");\n/* harmony import */ var _WalletProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WalletProvider */ \"(app-pages-browser)/./providers/WalletProvider.tsx\");\n/* harmony import */ var _utils_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/config */ \"(app-pages-browser)/./utils/config.ts\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\n/* __next_internal_client_entry_do_not_use__ useContract,ContractProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst ContractContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useContract = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ContractContext);\n    if (!context) {\n        throw new Error(\"useContract must be used within a ContractProvider\");\n    }\n    return context;\n};\n_s(useContract, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst ContractProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const { wallet, algodClient, peraWallet } = (0,_WalletProvider__WEBPACK_IMPORTED_MODULE_3__.useWallet)();\n    const [poolState, setPoolState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const contractConfig = (0,_utils_config__WEBPACK_IMPORTED_MODULE_4__.getContractConfig)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (algodClient) {\n            refreshPoolState();\n        }\n    }, [\n        algodClient\n    ]);\n    const refreshPoolState = async ()=>{\n        if (!algodClient) return;\n        setIsLoading(true);\n        try {\n            const appInfo = await algodClient.getApplicationByID(contractConfig.poolAppId).do();\n            const globalState = appInfo.params.globalState;\n            // Parse global state to extract pool information\n            const poolData = {\n                appId: contractConfig.poolAppId,\n                assetX: contractConfig.assetXId,\n                assetY: contractConfig.assetYId,\n                currentPrice: parseGlobalState(globalState || [], \"current_price\") || 0,\n                totalLiquidity: parseGlobalState(globalState || [], \"total_liquidity\") || 0,\n                feeRate: parseGlobalState(globalState || [], \"current_fee_rate\") || 30,\n                ranges: [\n                    {\n                        id: 1,\n                        lower: parseGlobalState(globalState || [], \"range1_lower\") || 0,\n                        upper: parseGlobalState(globalState || [], \"range1_upper\") || 0,\n                        liquidity: parseGlobalState(globalState || [], \"range1_liquidity\") || 0,\n                        isActive: (parseGlobalState(globalState || [], \"range1_liquidity\") || 0) > 0\n                    },\n                    {\n                        id: 2,\n                        lower: parseGlobalState(globalState || [], \"range2_lower\") || 0,\n                        upper: parseGlobalState(globalState || [], \"range2_upper\") || 0,\n                        liquidity: parseGlobalState(globalState || [], \"range2_liquidity\") || 0,\n                        isActive: (parseGlobalState(globalState || [], \"range2_liquidity\") || 0) > 0\n                    },\n                    {\n                        id: 3,\n                        lower: parseGlobalState(globalState, \"range3_lower\") || 0,\n                        upper: parseGlobalState(globalState, \"range3_upper\") || 0,\n                        liquidity: parseGlobalState(globalState, \"range3_liquidity\") || 0,\n                        isActive: (parseGlobalState(globalState, \"range3_liquidity\") || 0) > 0\n                    }\n                ]\n            };\n            setPoolState(poolData);\n        } catch (error) {\n            console.error(\"Error fetching pool state:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const parseGlobalState = (globalState, key)=>{\n        const item = globalState.find((item)=>Buffer.from(item.key, \"base64\").toString() === key);\n        return item ? item.value.uint : null;\n    };\n    const executeSwap = async (params)=>{\n        if (!wallet.isConnected || !wallet.address || !algodClient || !peraWallet) {\n            return {\n                success: false,\n                error: \"Wallet not connected\"\n            };\n        }\n        try {\n            const suggestedParams = await algodClient.getTransactionParams().do();\n            // Create application call transaction for swap\n            const appCallTxn = algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].makeApplicationCallTxnFromObject({\n                from: wallet.address,\n                appIndex: contractConfig.poolAppId,\n                onComplete: algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].OnApplicationComplete.NoOpOC,\n                appArgs: [\n                    new Uint8Array(Buffer.from(\"swap\")),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.assetIn),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.assetOut),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.amountIn),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.minAmountOut),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.deadline)\n                ],\n                foreignAssets: [\n                    params.assetIn,\n                    params.assetOut\n                ].filter((id)=>id !== 0),\n                suggestedParams\n            });\n            // Sign and send transaction\n            const signedTxns = await peraWallet.signTransaction([\n                appCallTxn\n            ]);\n            const { txId } = await algodClient.sendRawTransaction(signedTxns).do();\n            // Wait for confirmation\n            await algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].waitForConfirmation(algodClient, txId, 4);\n            // Refresh pool state and wallet balance\n            await refreshPoolState();\n            return {\n                success: true,\n                txId\n            };\n        } catch (error) {\n            console.error(\"Swap error:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        }\n    };\n    const addLiquidity = async (params)=>{\n        if (!wallet.isConnected || !wallet.address || !algodClient || !peraWallet) {\n            return {\n                success: false,\n                error: \"Wallet not connected\"\n            };\n        }\n        try {\n            const suggestedParams = await algodClient.getTransactionParams().do();\n            const appCallTxn = algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].makeApplicationCallTxnFromObject({\n                from: wallet.address,\n                appIndex: contractConfig.poolAppId,\n                onComplete: algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].OnApplicationComplete.NoOpOC,\n                appArgs: [\n                    new Uint8Array(Buffer.from(\"add_liquidity\")),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.assetX),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.assetY),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.amountXDesired),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.amountYDesired),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.amountXMin),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.amountYMin),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.rangeId),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(params.deadline)\n                ],\n                foreignAssets: [\n                    params.assetX,\n                    params.assetY\n                ].filter((id)=>id !== 0),\n                suggestedParams\n            });\n            const signedTxns = await peraWallet.signTransaction([\n                appCallTxn\n            ]);\n            const { txId } = await algodClient.sendRawTransaction(signedTxns).do();\n            await algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].waitForConfirmation(algodClient, txId, 4);\n            await refreshPoolState();\n            return {\n                success: true,\n                txId\n            };\n        } catch (error) {\n            console.error(\"Add liquidity error:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        }\n    };\n    const removeLiquidity = async (lpTokens, rangeId)=>{\n        if (!wallet.isConnected || !wallet.address || !algodClient || !peraWallet) {\n            return {\n                success: false,\n                error: \"Wallet not connected\"\n            };\n        }\n        try {\n            const suggestedParams = await algodClient.getTransactionParams().do();\n            const appCallTxn = algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].makeApplicationCallTxnFromObject({\n                from: wallet.address,\n                appIndex: contractConfig.poolAppId,\n                onComplete: algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].OnApplicationComplete.NoOpOC,\n                appArgs: [\n                    new Uint8Array(Buffer.from(\"remove_liquidity\")),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(lpTokens),\n                    algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].encodeUint64(rangeId)\n                ],\n                suggestedParams\n            });\n            const signedTxns = await peraWallet.signTransaction([\n                appCallTxn\n            ]);\n            const { txId } = await algodClient.sendRawTransaction(signedTxns).do();\n            await algosdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].waitForConfirmation(algodClient, txId, 4);\n            await refreshPoolState();\n            return {\n                success: true,\n                txId\n            };\n        } catch (error) {\n            console.error(\"Remove liquidity error:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContractContext.Provider, {\n        value: {\n            poolState,\n            isLoading,\n            refreshPoolState,\n            executeSwap,\n            addLiquidity,\n            removeLiquidity\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/baturalpguvenc/Documents/GitHub/seltra-amm/nextjs-frontend/providers/ContractProvider.tsx\",\n        lineNumber: 217,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(ContractProvider, \"XoVYGDtDUqjjGRklmxaoqDddY54=\", false, function() {\n    return [\n        _WalletProvider__WEBPACK_IMPORTED_MODULE_3__.useWallet\n    ];\n});\n_c = ContractProvider;\nvar _c;\n$RefreshReg$(_c, \"ContractProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./providers/ContractProvider.tsx\n"));

/***/ })

});